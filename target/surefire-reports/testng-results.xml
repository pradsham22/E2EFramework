<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-25T14:54:08 IST" name="Suite" finished-at="2020-08-25T14:54:23 IST" duration-ms="14779">
    <groups>
    </groups>
    <test started-at="2020-08-25T14:54:08 IST" name="Navigation bar" finished-at="2020-08-25T14:54:22 IST" duration-ms="13541">
      <class name="Academy.ValidateNavBar">
        <test-method is-config="true" signature="browserInitialise()[pri:0, instance:Academy.ValidateNavBar@7446d8d5]" started-at="2020-08-25T14:54:08 IST" name="browserInitialise" finished-at="2020-08-25T14:54:22 IST" duration-ms="13406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialise -->
        <test-method signature="getNavBar()[pri:0, instance:Academy.ValidateNavBar@7446d8d5]" started-at="2020-08-25T14:54:22 IST" name="getNavBar" finished-at="2020-08-25T14:54:22 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNavBar -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Academy.ValidateNavBar@7446d8d5]" started-at="2020-08-25T14:54:22 IST" name="tearDown" finished-at="2020-08-25T14:54:22 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Academy.ValidateNavBar -->
    </test> <!-- Navigation bar -->
    <test started-at="2020-08-25T14:54:08 IST" name="Home Page Title check" finished-at="2020-08-25T14:54:22 IST" duration-ms="14062">
      <class name="Academy.ValidateTitle">
        <test-method is-config="true" signature="browserInitialise()[pri:0, instance:Academy.ValidateTitle@79da1ec0]" started-at="2020-08-25T14:54:08 IST" name="browserInitialise" finished-at="2020-08-25T14:54:22 IST" duration-ms="13324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialise -->
        <test-method signature="getHeader()[pri:0, instance:Academy.ValidateTitle@79da1ec0]" started-at="2020-08-25T14:54:22 IST" name="getHeader" finished-at="2020-08-25T14:54:22 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getHeader -->
        <test-method signature="getTitle()[pri:0, instance:Academy.ValidateTitle@79da1ec0]" started-at="2020-08-25T14:54:22 IST" name="getTitle" finished-at="2020-08-25T14:54:22 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method signature="getTitleFailed()[pri:0, instance:Academy.ValidateTitle@79da1ec0]" started-at="2020-08-25T14:54:22 IST" name="getTitleFailed" finished-at="2020-08-25T14:54:22 IST" duration-ms="35" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FEATUREDCOURSES] but found [FEATURED COURSES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FEATUREDCOURSES] but found [FEATURED COURSES]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Academy.ValidateTitle.getTitleFailed(ValidateTitle.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitleFailed -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Academy.ValidateTitle@79da1ec0]" started-at="2020-08-25T14:54:22 IST" name="tearDown" finished-at="2020-08-25T14:54:22 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Academy.ValidateTitle -->
    </test> <!-- Home Page Title check -->
    <test started-at="2020-08-25T14:54:08 IST" name="Login Check" finished-at="2020-08-25T14:54:23 IST" duration-ms="14779">
      <class name="Academy.LoginHome">
        <test-method is-config="true" signature="browserInitialise()[pri:0, instance:Academy.LoginHome@758c83d8]" started-at="2020-08-25T14:54:08 IST" name="browserInitialise" finished-at="2020-08-25T14:54:22 IST" duration-ms="13996" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialise -->
        <test-method signature="LoginPage(java.lang.String, java.lang.String)[pri:0, instance:Academy.LoginHome@758c83d8]" started-at="2020-08-25T14:54:22 IST" name="LoginPage" data-provider="getData" finished-at="2020-08-25T14:54:23 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginPage -->
        <test-method signature="LoginPage(java.lang.String, java.lang.String)[pri:0, instance:Academy.LoginHome@758c83d8]" started-at="2020-08-25T14:54:23 IST" name="LoginPage" data-provider="getData" finished-at="2020-08-25T14:54:23 IST" duration-ms="225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginPage -->
        <test-method signature="LoginPage(java.lang.String, java.lang.String)[pri:0, instance:Academy.LoginHome@758c83d8]" started-at="2020-08-25T14:54:23 IST" name="LoginPage" data-provider="getData" finished-at="2020-08-25T14:54:23 IST" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginPage -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Academy.LoginHome@758c83d8]" started-at="2020-08-25T14:54:23 IST" name="teardown" finished-at="2020-08-25T14:54:23 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Academy.LoginHome -->
    </test> <!-- Login Check -->
  </suite> <!-- Suite -->
</testng-results>
